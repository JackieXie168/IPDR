# -*-Makefile-*-

# $Id: solaris.defs,v 1.3 2005/04/21 11:31:40 dmitryk Exp $

ARCH_FLAG := -DSOLARIS

# $(warning in solaris.defs debug=$(DEBUG_MODE) opt=$(OPTIMIZE_MODE) purify=$(PURIFY_MODE) system=$(SYSTEM) platform=$(PLATFORM))

MT_SUPPORT := 1
# comment out following for Sun's compiler
# USE_GCC := 1
ifdef DEBUG_MODE 
USE_GCC := 1
endif

CFLAGS   := -DPTHREADS_SUPPORT $(ARCH_FLAG)
CXXFLAGS := -DPTHREADS_SUPPORT $(ARCH_FLAG)

ifdef USE_GCC
    WARNING_FLAGS := -Wall -Wshadow -Wpointer-arith -Wcast-qual -Wwrite-strings -Waggregate-return -Wstrict-prototypes -Wmissing-prototypes -Wno-long-long -DPTHREADS_SUPPORT #  -pedantic -Wtraditional -Wcast-align -Wconversion
    LDFLAGS := -g $(WARNING_FLAGS) # -fno-rtti -Weffc++
    CC := gcc -pipe -g $(ARCH_FLAG) $(WARNING_FLAGS)
    CXX := g++ -pipe -g $(ARCH_FLAG) $(WARNING_FLAGS) -Wno-aggregate-return -Woverloaded-virtual # -fno-rtti # -Weffc++
    LD := g++ -pipe
    AR := ar
else
    LDFLAGS :=  -compat=4
    CC := /opt/SUNWspro/bin/cc +w2 -g
    CXX := /opt/SUNWspro/bin/CC +w2 -g
    LD := /opt/SUNWspro/bin/CC +w2 -g
    AR := /usr/ccs/bin/ar
    CFLAGS   += -mt -compat=4 -DNEEDS_BOOL
    CXXFLAGS += -mt -compat=4 -DNEEDS_BOOL
endif

RM := /bin/rm -rf
MKDIR := mkdir
SED := sed
MAKE_DEP := g++ -pipe -M

ifdef USE_GCC
# Need to figure out exactly how to get g++ to build the way we want ...
    LINK_SHARED := -shared # -export-dynamic
    LINK_STATIC := -v -Xlinker -Bstatic -lstdc++ -Xlinker -Bdynamic # /usr/local/lib/libstdc++.a.2.10.0
    PIC_FLAG := -fpic
    SYS_LIBS := -lnsl -lsocket -lrt
else
    LINK_SHARED = -G
	LINK_STATIC := -Bstatic -lC -Bdynamic
    PIC_FLAG = -G
    SYS_LIBS = -lnsl -lsocket -lrt
endif

# note: we use the "-O" flag because C compilers on RISC machines
# generate pretty awful code and "-O" is fairly benign.
# this script has the location of the dmalloc library hard-coded ...
# ... this should be changed; and dmalloc should be rebuilt as
# ... needed using gcc or Sun's compiler.
ifdef DEBUG_MODE
ifdef USE_GCC
CFLAGS   += -g -DDEBUG_MODE # -DDEBUG_MEMORY -DTRACE_MAINFUNC -DDEBUG_LOCKS
CXXFLAGS += -g -DDEBUG_MODE # -DDEBUG_MEMORY -DTRACE_MAINFUNC -DDEBUG_LOCKS
LDFLAGS += -g 
#SYS_LIBS += -L$(DMALLOC_HOME)/dmalloc/dmalloc-4.8.2 -ldmallocth
# CFLAGS   += -I$(DMALLOC_HOME)/dmalloc/dmalloc-4.8.2
# CXXFLAGS += -I$(DMALLOC_HOME)/dmalloc/dmalloc-4.8.2
else
# Until we build dmalloc that works with Sun's CC 5.0
CFLAGS   += -g -DDEBUG_MODE   -O
CXXFLAGS += -g -DDEBUG_MODE -O
LDFLAGS += -g 
endif
endif

ifdef PURIFY_MODE
PURIFYHOME:=$(shell purify -printhomedir)
CFLAGS   += -g -O # -DDEBUG_MODE -DPURIFY -I$(PURIFYHOME)/purify.h
CXXFLAGS += -g -O # -DDEBUG_MODE -DPURIFY -I$(PURIFYHOME)/purify.h
LDFLAGS += -g # -L$(PURIFYHOME) -lpurify_stubs
endif

ifdef QUANTIFY_MODE
CFLAGS   += -g -O
CXXFLAGS += -g -O
LDFLAGS += -g -O
endif

# even in optimize mode, leave the symbols in (for debugging)
ifdef OPTIMIZE_MODE
CFLAGS   += -g  -O
CXXFLAGS += -g  -O
endif

ifdef MT_SUPPORT
CFLAGS   += -DMT_SUPPORT -D_REENTRANT
CXXFLAGS += -DMT_SUPPORT -D_REENTRANT
LDFLAGS += -lpthread
ifdef USE_GCC
else
   CFLAGS   += -mt
   CXXFLAGS += -mt
   LDFLAGS += -mt
endif
endif

ifdef SNMP_SUPPORT
	CFLAGS += -DSNMP_SUPPORT
	CXXFLAGS += -DSNMP_SUPPORT
	LDFLAGS += -DSNMP_SUPPORT -lnetsnmpagent -lnetsnmpmibs -lnetsnmphelpers -lnetsnmp -ldl -lcrypto -lm -lrpm
endif

ifdef USE_WINDOWSIZE
	CFLAGS += -DUSE_WINDOWSIZE
	CXXFLAGS += -DUSE_WINDOWSIZE
	LDFLAGS += -DUSE_WINDOWSIZE
endif

ifdef PURIFY_MODE
LD := purify -chain-length=30 -free_queue_length=10000 -free-queue-threshold=100000 -max-threads=100 -follow-child-processes=yes -pointer-offset=16 $(LD) #  -force-rebuild -messages=all
endif

ifdef QUANTIFY_MODE
LD := quantify $(LD)
endif

