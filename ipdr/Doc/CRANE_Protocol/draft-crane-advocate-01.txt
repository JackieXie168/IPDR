

 Internet Draft                                    Kevin Zhang 
 Document: draft-hain-msword-template-07.txt       XACCT Technologies 
 IPFIX WG                                           
 Expires: November 2002                             
                                                    
                                                   May 2002 
  
                Adopting XACCT’s CRANE as the IPFIX Protocol 
      
 Status of this Memo  
     
    This document is an Internet-Draft and is in full conformance with 
    all provisions of Section 10 of RFC2026.  
         
    Internet-Drafts are working documents of the Internet Engineering 
    Task Force (IETF), its areas, and its working groups.  Note that 
    other groups may also distribute working documents as Internet-
    Drafts.  
         
    Internet-Drafts are draft documents valid for a maximum of six 
    months and may be updated, replaced, or obsoleted by other 
    documents at any time. It is inappropriate to use Internet-Drafts 
    as reference material or to cite them other than as "work in 
    progress."  
         
    The list of current Internet-Drafts can be accessed at  
         http://www.ietf.org/ietf/1id-abstracts.txt  
    The list of Internet-Draft Shadow Directories can be accessed at  
         http://www.ietf.org/shadow.html.  
         
 Abstract  
     
    This document introduces the CRANE (Common Reliable Accounting for 
    Network Elements) developed by the XACCT Technologies.  The key 
    functions and capabilities offered by the protocol are described.  
    The objective of this document is to advocate the adoption of CRANE 
    as a draft IPFIX protocol, that will be further enhanced bye the 
    IPFIX WG to meet all the IPFIX requirements. In the end of the 
    document, we provide a detailed analysis of the CRANE design versus 
    the IPFIX requirements.  










  
  
 Kevin Zhang            Expires - November 2002               [Page 1] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
     
 Table of Contents 
     
    1. Overview......................................................3 
    2. CRANE Architecture............................................3 
       2.1 Functional Reference Model................................3 
       2.2 CRANE Protocol Structure..................................4 
    3. CRANE Protocol Functions......................................5 
       3.1 Session Control...........................................5 
       3.2 Error Control.............................................6 
       3.3 Flow Control..............................................6 
       3.4 Redundancy Support........................................7 
       3.5 Template Management.......................................8 
    4. Key Features of the CRANE Protocol............................8 
       4.1 End-to-end Reliability....................................8 
       4.2 Flexibility...............................................9 
       4.3 Real-time Exporting.......................................9 
       4.4 Efficiency................................................9 
       4.5 Security..................................................9 
       4.6 Lightweight and Memory Efficiency.........................9 
    5. Deployment Experiences........................................9 
    6. Examples of IPFIX Information Model Support..................10 
    7. CRANE vs. IPFIX Protocol Requirements........................10 
    8. Security Considerations......................................10 
    References......................................................10 
    Author's Addresses..............................................11 
  






















  
  
 Kevin Zhang            Expires - November 2002               [Page 2] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
 1. Overview  
         
    This document introduces the CRANE (Common Reliable Accounting for 
    Network Elements) developed by the XACCT Technologies.  The key 
    functions and capabilities offered by the protocol are described.  
    The objective of this document is to advocate the adoption of CRANE 
    as a draft IPFIX protocol, that will be further enhanced bye the 
    IPFIX WG to meet all the IPFIX requirements. In the end of the 
    document, we provide a detailed analysis of the CRANE design versus 
    the IPFIX requirements.      
         
 2. CRANE Architecture 
     
 2.1 Functional Reference Model 
     
    The following figure illustrates the reference model of an flow 
    information export system using the CRANE protocol. It identifies 
    key entities and interfaces within the system.  
     
      +---------------+           +---------------+      
      | +----------+  |           |  +----------+ | 
      | |Monitoring|  |           |  |Processor | | 
      | |Entity    |  |           |  |Entity    | | 
      | +----------+  |CRANE      |  +----------+ |   
      | +----------+  |Protocol   |  +----------+ | 
      | |CRANE     |<=|===========|=>|CRANE     | | 
      | |Client    |  |           |  |Server    | | 
      | +----------+  |           |  +----------+ | 
      | Exporting     |           |  Collection   | 
      | Device        |           |  Device       |    
      +---------------+           +---------------+ 
     
    An exporting device is typically a network element (e.g. routers, 
    measurement probes); a collection device may be part of mediation 
    systems, accounting/billing systems, and network management systems 
    to facilitate business and operation support. 
     
    CRANE Client 
     
       A CRANE Client is an implementation on the data producing side 
       of the CRANE protocol. It is typically integrated with the 
       network element’s software, enabling it to collect and send out 
       accounting data to a mediation/billing system using the protocol 
       defined herein. 
     
    CRANE Server 
     

  
  
 Kevin Zhang            Expires - November 2002               [Page 3] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
       A CRANE Server is an implementation on the data receiving side 
       of the CRANE protocol. It is typically part of a Business 
       Support System (BSS) (e.g. Billing, Market Analysis, Fraud 
       detection, etc.), or a mediation system. There could be more 
       than one CRANE server connected to one CRANE client to improve 
       robustness of the usage information export system.  
     
    Monitoring Entity 
     
        The primary task performed by the monitoring entity is to 
        monitor IP flows, and derive IP flow information. How the meter 
        entity measures and derives flow information is outside the 
        scope of the IPFIX architecture, but the attributes used to 
        describe flow information must comply with the IPFIX 
        information model and IP flow definitions. 
     
    Processor Entity 
     
        The primary task performed by the Processor entity is to 
        process the received IP flow information based upon end 
        application’s requirements. The functionality of the processor 
        is outside the scope of the IPFIX architecture, though the 
        following functions should be considered in designing and 
        deploying an IPFIX system. 
     
 2.2 CRANE Protocol Structure 
     
    The CRANE protocol is an application that uses the data 
    communications services provided by lower layer protocols. It 
    relies on lower layer protocols to deliver reliable, in-sequence 
    data packets.  
     
    The following diagram illustrates the CRANE architecture: 
     















  
  
 Kevin Zhang            Expires - November 2002               [Page 4] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
       +----------------+             +----------------+ 
       |    CRANE       |             |     CRANE      |+ 
       |    User        |             |     User       ||+ 
       +----------------+             +----------------+|| 
       |    CRANE       | ==========> |     CRANE      |+| 
       |    Client      | <---------- |     Server     ||+ 
       +----------------+             +----------------+|| 
       |  Transport     |             |   Transport    |+| 
       |    Layer       | <---------> |     Layer      ||+ 
       +----------------+             +----------------+|| 
       |    Lower       |             |     Lower      |+| 
       |    Layers      | <---------> |     Layers     ||+ 
       +----------------+             +----------------+|| 
                                       +----------------+| 
                                        +----------------+ 
                                        
    The transport protocols used for CRANE message delivery may be TCP 
    or SCTP. TCP supports all the CRANE functionality, while SCTP 
    offers some desirable capabilities that would improve the overall 
    performance of data export.   
     
    UDP is a simple connectionless transport layer protocol that has 
    advantages of being fast and agile, but it provides no reliability 
    and lacks flow control mechanisms. Hence, The CRANE protocol should 
    not use UDP as the transport layer protocol, unless additional 
    features such as reliability, sequence integrity, and flow control, 
    etc. are provided. 
     
 3. CRANE Protocol Functions 
     
    In this section, we describe some of the functions forming the 
    CRANE protocol. These functions support CRANE capabilities that 
    meet IPFIX requirements. 
     
 3.1 Session Control 
     
    The CRANE protocol uses connection-oriented data transfer. This 
    choice is made as the connection/session on which flow information 
    is exported is expected to last for a long duration, and the 
    network configuration between protocol end-points is mostly static. 
    Furthermore, this choice make the support of reliability more 
    convenient. 
     
    A logical association of session is established between protocol 
    end-points before flow information can be exported.  A export 
    session consists of three phases - 
     
    * Session Establishment 
    * Flow Information Export 
  
  
 Kevin Zhang            Expires - November 2002               [Page 5] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
    * Session Termination  
     
    During session establishment, a CRANE server issues a request that 
    trigger the transport layer connection setup.  After the transport 
    layer connection is established successfully, a set of templates 
    are negotiated between a CRANE client and servers.  A Template 
    defines the structure of any types of Data Record that may be 
    exported from the CRANE client, and specifies the data type, 
    meaning, and location of the fields in the record. The 
    specification of templates relates to the flow definitions, and 
    governs what flow information would be exposed to the external 
    systems.  The provisioning of templates may be done through network 
    management system, and is out of the scope of the CRANE protocol.    
     
    After the session is established successfully, the IP flow 
    information is exported from the exporting device to a collector.  
    The data format is governed by the negotiated templates; the 
    collector will use the template to decode the CRANE data message 
    payload. Error control, congestion control, and redundany 
    procedures are executed during flow information export, to ensure 
    reliability and robustness of the system.  
     
    As a data export session is expected to last for a long durtion, no 
    explicit session termination messages were provided by the CRANE 
    protocol.  A CRANE session is typically terminated as a result of 
    tearing down the tranport layer connection by the CRANE users. 
     
 3.2 Error Control 
     
    The CRANE protocol relies on the lower layer to provide in-
    sequence, reliable data packet delivery.  At the protocol level, it 
    supports the error control to ensure the flow information is 
    correctly received, processed, and optionally stored at the 
    collector.     
     
    Messages (containing flow information) received by the collector 
    are acknowledged. By monitoring the acknowledgements from the 
    collector, the exporting device can re-transmit date messages that 
    are perceived lost.  
     
    The CRANE protocol provides both the positive and negative 
    acknowledgement messages, this may also some flexisbility in the 
    collector and exporter behaviors that suit the specific deployment 
    requirements.     
     
 3.3 Flow Control 
     
    The CRANE protocol provides the mechanism that can support various 
    flow control schemes.  The actual flow control algorithm is 
  
  
 Kevin Zhang            Expires - November 2002               [Page 6] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
    implmentation specific.  The current XACCT implementaion uses a 
    simple window based flow control mechanism.  The objective of this 
    function is to limit the amount of flow information to be exported 
    to an overloaded collector.  A fixed window size and a round trip 
    time RTT are configurable parameters, which are provisioned for 
    exporter and collectors.  
     
    The exporting device is only allowed to export new data records if 
    the outstanding records are less then W. In this way, the average 
    flow information export rate can be effectively controlled. If we 
    denote the collector window size as W, and the round trip time as 
    RTT, the average flow information export rate can be limted to 
    W/RTT. 
      
    If CRANE is adopted as the standard IPFIX protocol, a standard flow 
    control algorithm needs to be specified.   
     
 3.4 Redundancy Support 
     
    For purposes of improved reliability and robustness, redundant 
    CRANE server configuration MAY be employed. The CRANE protocol 
    supports delivering accounting data to alternate CRANE servers.   
     
    A CRANE session may comprise of one or more CRANE servers. The 
    CRANE client is responsible for configuring network addresses of 
    all CRANE servers belonging to the session. A Server Priority is 
    assigned to each CRANE server.   
  
    A CRANE client delivers data record to its perceived operating 
    CRANE server with the highest priority; if this CRANE server is 
    deemed unreachable, the CRANE client delivers the accounting data 
    to the next highest priority CRANE server that is perceived to be 
    operating. If no perceived operating CRANE servers are available, 
    accounting data may be queued in the CRANE client until any CRANE 
    server is available or the client’s queue space runs out. An alarm 
    should be generated to inform the CRANE user of the queue overflow 
    condition. Data record exporting should revert to the higher 
    priority server when it is perceived to be operating again. 
     
    The conditions under which a fail-over/fail-back may occur include: 
     
       A) Transport layer notifies the CRANE client that the 
       corresponding port of the CRANE server is unresponsive. 
        
       B) Total size of unacknowledged data records has exceeded a 
       threshold (configurable) for certain duration (configurable). 
              
       C) A explicit message is received from the active server 
       instructing the swith over. 
  
  
 Kevin Zhang            Expires - November 2002               [Page 7] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
              
       D) A lower priority server is the active one and a higher 
       priority server has recovered. 
      
     
 3.5 Template Management 
     
    The CRANE protocol enables efficient delivery of accounting data.  
    This is achieved by negotiating a set of Data Templates for a CRANE 
    session before actual accounting data is delivered.  A data 
    template defines the structure of a DATA message payload by 
    describing the data type, meaning, and location of the fields in 
    the payload. By agreeing on session templates, CRANE servers 
    understand how to process DATA messages received from a CRANE 
    client. As a result, a CRANE client only needs to deliver actual 
    flow information without attaching any descriptors of the data; 
    this reduces the amount of bytes sent over communication links. 
     
    The CRANE protocol supports usage of several templates concurrently 
    (for different flow data records). In a CRANE session, all the 
    CRANE servers and the CRANE client must use the same set of 
    templates. The templates are provisioned through network management 
    system.  
     
    The complete set of templates residing in a CRANE client MUST bear 
    a configuration ID that identifies the template set. Each data 
    record is delivered with the Template ID and the Configuration ID, 
    so that the correct template can be referenced. A server, when 
    receiving a record with an older Configuration ID, may handle the 
    record gracefully by keeping some template history. The transport 
    layer should ensure that a server would not get messages with 
    future configuration IDs. 
     
 4. Key Features of the CRANE Protocol 
  
    CRANE protocol functions provide building blocks that supports key 
    protocol capabilities.  These capabilities can be implementated to 
    meet various IPFIX requirements. We highlight these capabilities or 
    features in this section.   
     
 4.1 End-to-end Reliability 
     
    The CRANCE protocol uses a reliable transport layer protocol such 
    as TCP or SCTP that ensures in-sequence, reliable data packet 
    delivery. It supports flow control and CRANE protocol level 
    reliability through acknowledgement procedures. As a result, 
    valuable accounting records are not only ensured to be delivered 
    reliably across the network, but also processed correctly and 
    stored in persistent storage if required.  The CRANE protocol also 
  
  
 Kevin Zhang            Expires - November 2002               [Page 8] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
    supports server redundancy configurations and load balancing; 
    through rapid, automatic failover and failback operations, high 
    level of availability and fault tolerance is offered. 
     
 4.2 Flexibility 
     
    The CRANE protocol imposes minimal constraints on the type and 
    format of delivered accounting records.  By employing a “template 
    negotiation” procedure, any kind of user-defined data model can be 
    supported. This enables the CRANE protocol to handle diversified 
    information export requirements.  The protocol also supports 
    multiple "sessions" and multiple record "formats" between CRANE 
    clients and servers; this enables different business applications 
    to subscribe their required information.   
     
 4.3 Real-time Exporting 
     
    The CRANE protocol supports the “push” based data delivery model.  
    This potentially can minimize the latency between data collection 
    at Network Elements and data reception and processing at CRANE 
    servers. 
     
 4.4 Efficiency 
     
    The CRANE protocol messages are of little protocol overhead, and 
    records are encoded in a compact binary format.  By negotiating 
    “templates” beforehand, only actual records are transmitted with 
    minimum overhead. 
     
 4.5 Security 
      
    The CRANE protocol currently relies on lower layer security 
    mechanisms and supports.  It can easily accommodate functions such 
    as authentication, and encryption. 
     
 4.6 Lightweight and Memory Efficiency 
     
    The CRANE API embedding in network equipments has a footprint of 
    approximated 150 – 200 KB and demands little CPU processing power 
    (platform dependant). The memory requirement on the client side 
    depends on factors such as record size, failover scenarios, export 
    interface data rate, round-trip delay between the client and 
    server, etc.; it can be provisioned to fit in different types of 
    network equipment. 
     
 5. Deployment Experiences 
     
    To be added 
     
  
  
 Kevin Zhang            Expires - November 2002               [Page 9] 
              Adopting XACCT’s CRANE as the IPFIX protocol     May 2002 
  
  
 6. Examples of IPFIX Information Model Support 
     
    Using the flexibile templates, the CRANE protocol can easily 
    support the IPFIX Information Model. Several examples are presented 
    to show how templates can be defined. 
  
    To be added 
         
 7. CRANE vs. IPFIX Protocol Requirements  
     
    To be added 
        
         
 8. Security Considerations  
      
    The CRANE protocol is an application running over a reliable 
    transport layer protocol. It relies on security services provided 
    by lower layer protocols to protect the communications between 
    CRANE clients and servers.  
     
    The lower layer security services are transparent to the CRANE 
    protocols. Security mechanisms may be provided at the IP layer 
    using IPSEC [1], or it may be implemented for transport layer using 
    TLS [2].  The provisioning of the lower layer security services is 
    out of the scope of this document.   
         
 References  
  
    [1] S. Kent, et al. “Security Architecture for the Internet 
    Protocol”, RFC 2401, November 1998. 
     
    [2]   T. Dierks, et al. “The TLS Protocol, Version 1.0”, RFC 2246, 
    January 1999. 
  
             
     













  
  
 Kevin Zhang            Expires - November 2002              [Page 10] 
       
 Author's Addresses  
         
    Kevin Zhang  
    XACCT Technologies, Inc.  
    2900 Lakeside Drive          Phone:  1-301-992-4697  
    Santan Clara, CA. 95054      Email:  kevin.zhang@xacct.com  
    U.S.A.     
     
     
     







































  
  
 Kevin Zhang            Expires - November 2002               [Page 1] 
